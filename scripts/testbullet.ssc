import BIDMach.rl.environments.Bullet
import edu.berkeley.bid.bullet._

val sim = new Bullet;

//sim.connect(Bullet.eCONNECT_GUI);

sim.connect(Bullet.eCONNECT_DIRECT);

sim.configureDebugVisualizer(Bullet.COV_ENABLE_GUI, 0);

sim.setGravity(new Vector3(0,0,-9.8f));

val planeId = sim.loadURDF("/code/bullet3/data/plane.urdf")

val cubeStartPos = new Vector3(0,0,0.6f);

val cubeStartOrient = Bullet.getQuaternionFromEuler(new Vector3(0,0,0));

val boxId = sim.loadURDF("/code/bullet3/data/r2d2.urdf", cubeStartPos, cubeStartOrient)

sim.stepSimulation()

val imgsize = 512

//val img = sim.getCameraImage(imgsize, imgsize)

val view = Bullet.computeViewMatrixFromPositions(row(1,1,0.5f),row(0,0,0),row(0,0,1));

val proj = Bullet.computeProjectionMatrixFOV(100, 1, 0.01f, 100);

val img = sim.getCameraImageInts1(imgsize, imgsize, view, proj);

show(img)